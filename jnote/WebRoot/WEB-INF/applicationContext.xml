<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
 	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">


	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/jnote">
		</property>
		<property name="username" value="jnote"></property>
		<property name="password" value="123"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/jnote/vo/User.hbm.xml</value>
				<value>com/jnote/vo/Folder.hbm.xml</value>
				<value>com/jnote/vo/MdFile.hbm.xml</value>
				<value>com/jnote/vo/UserInfo.hbm.xml</value>
			</list>
		</property></bean>
	
	<!-- DAO bean -->
	<bean id="UserDAO" class="com.jnote.dao.UserDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="FolderDAO" class="com.jnote.dao.FolderDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="MdFileDAO" class="com.jnote.dao.MdFileDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="UserInfoDAO" class="com.jnote.dao.UserInfoDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<!-- service bean  -->
	<bean id="UserService" class="com.jnote.service.impl.UserService">
		<property name="userDao">
			<ref bean="UserDAO"/>
		</property>
	</bean>
	<bean id="FolderService" class="com.jnote.service.impl.FolderService">
		<property name="folderDao">
			<ref bean="FolderDAO"/>
		</property>
	</bean>
	<bean id="MdFileService" class="com.jnote.service.impl.MdFileService">
		<property name="mdFileDao">
			<ref bean="MdFileDAO"/>
		</property>
	</bean>
	
	<!-- serviceManager bean -->
	<bean id="ServiceManager" class="com.jnote.service.impl.ServiceManager">
		<property name="userService">
			<ref bean="UserService"/>
		</property>
		<property name="folderService">
			<ref bean="FolderService"/>
		</property>
		<property name="mdFileService">
			<ref bean="MdFileService"/>
		</property>
	</bean>
	
	<!-- action bean -->
	<bean id="RegisterAction" class="com.jnote.action.RegisterAction" scope="prototype">
		<property name="serviceManager">
			<ref bean="ServiceManager"/>
		</property>
	</bean>
	
	<bean id="LogAction" class="com.jnote.action.LogAction" scope="prototype">
		<property name="serviceManager">
			<ref bean="ServiceManager"/>
		</property>
	</bean>
	<bean id="HomeAction" class="com.jnote.action.HomeAction" scope="prototype">
		<property name="serviceManager">
			<ref bean="ServiceManager"/>
		</property>
	</bean>
	<bean id="AjaxAction" class="com.jnote.action.AjaxAction" scope="prototype">
		<property name="serviceManager">
			<ref bean="ServiceManager"/>
		</property>
	</bean>
	
	<!-- spring-aop transactionManager -->
	<bean id="txManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
           <!--  注入applicationContext.xml中配置的sessionFactory -->
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- <tx:method name="login" propagation="REQUIRED" />
            <tx:method name="sava*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="REQUIRED" /> -->
            <tx:method name="*" propagation="REQUIRED"/>
          <!--   对其他方法的配置      read-only="" -->
            <!-- <tx:method name="*" propagation="SUPPORTS" read-only="false" /> -->
        </tx:attributes>
    </tx:advice>
	   <!--  将事务通知和切入点组合 -->
    <aop:config>
        <aop:pointcut expression="execution(* com.shop.dao.*.*(..))" id="pc" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
    </aop:config>
	
</beans>